// Prisma schema file for Authentication System
// Documentation: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================================================
// AUTHENTICATION & USER MANAGEMENT
// ============================================================================

model User {
  id                String    @id @default(cuid())
  email             String    @unique
  username          String    @unique
  firstName         String    @map("first_name")
  lastName          String    @map("last_name")
  password          String
  isActive          Boolean   @default(true) @map("is_active")
  role              UserRole  @default(USER)
  emailVerified     Boolean   @default(false) @map("email_verified")
  emailVerifiedAt   DateTime? @map("email_verified_at")
  lastLoginAt       DateTime? @map("last_login_at")
  passwordChangedAt DateTime? @map("password_changed_at")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")

  // Relations
  sessions UserSession[]

  @@map("users")
}

enum UserRole {
  ADMIN
  USER
}

model UserSession {
  id           String    @id @default(cuid())
  userId       String    @map("user_id")
  refreshToken String    @unique @map("refresh_token")
  expiresAt    DateTime  @map("expires_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  revokedAt    DateTime? @map("revoked_at")
  userAgent    String?   @map("user_agent")
  ipAddress    String?   @map("ip_address")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}
